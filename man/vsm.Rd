% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vsm.R
\name{vsm}
\alias{vsm}
\title{Simulate volatility-stabilized market model}
\usage{
vsm(n = 2, delta = 0.1, dt = 1e-05, Tmax = 1, X0 = NULL,
  tol = 1e-16, rho = 0, samples = 1000)
}
\arguments{
\item{n}{Number of companies in market}

\item{delta}{Growth rate of market}

\item{dt}{Size of timestep in numerical integration}

\item{Tmax}{Time window of numerical integration [0,Tmax]}

\item{X0}{initial community size, default is rlnorm(n)}

\item{tol}{Tolerance - reflecting wall close to zero to prevent negative values}

\item{rho}{Mean to which market model reverts. Default is 0}
}
\value{
Two member list. First element is time vector. Second element is matrix whose columns are companies in the market and whose rows are timepoints
}
\description{
Simulate volatility-stabilized market model
}
\examples{
set.seed(1)
X0=rmultinom(1,size=200,prob=rep(1,5))
X <- vsm(5,Tmax=1,rho=1e3,samples=5e3,dt=1e-4,X0=X0)
tms <- X$time
X <- X$Market
R <- X/rowSums(X)
par(mfrow=c(1,2))
stackpoly(X,stack=T,main='Market Dynamics',ylim=c(0,350))
stackpoly(R,stack=T,main='Market Shares')


### now let's see how the variance scales with the mean
set.seed(2)
n=50
X0 <- rmultinom(1,size=250,prob=rep(1,n))
#the step below takes ~10s
X <- vsm(50,Tmax=10,delta=-3e-2,samples=5e3,X0=X0,dt=1e-4)
tms <- X$time
X <- X$Market
par(mfrow=c(1,1))
plot(rowSums(X),type='l',main='Market Size')
R <- X/rowSums(X)
ms <- colMeans(X) 
vs <- apply(X,MARGIN=2,var)
model <- glm(log(vs)~log(ms)-1)
model$coefficients
prediction <- exp(predict(model))

par(mfrow=c(1,2))
plot(ms,vs,xlab='mean',ylab='variance',main='Variance Scaling of VSM',log='xy')
lines(ms,prediction,lwd=2,col='blue')

### Finally, let's perform a neutral test
Pvals <- CVTest(1000,R)
plot(ecdf(Pvals),main='Washburne Test',xlim=c(0,1),ylim=c(0,1))
lines(c(0,1),c(0,1),lwd=2,col='red')
}

