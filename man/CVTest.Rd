% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CVTest.R
\name{CVTest}
\alias{CVTest}
\title{Constant Volatility Test for WFP}
\usage{
CVTest(ntests, R, regress = "f", formula = NULL, varformula = NULL,
  tm = NULL, ...)
}
\arguments{
\item{ntests}{Positive integer - number of randomly selected constant-volatility transformations (CVTs) for heteroskedasticity testing}

\item{R}{Compositional matrix - columns must be species and rows timepoints.}

\item{regress}{Either "f" or "t" - whether regrssion should be performed on the state of the CVT or on the time.}

\item{formula}{Formula for regression of the jumps in CVTs vs time or state of cvts. Should be in form "DF ~ f" or "DF ~ tm + I(tm^2)" or  etc. Default is quadratic regression}

\item{tm}{Input vector of timpoints to be used if \code{regress}='time'}

\item{varformla}{Input argument for \code{bptest}. Default is quadratic regression.}
}
\value{
vector of p-values from Bruesh-Pagan heteroskedasticity tests.
}
\description{
Constant Volatility Test for WFP
}
\examples{
library(plotrix)
library(WrightFisher)

set.seed(2)

#this may take ~20-30 seconds
wfp <- WFP(nSpecies=15,lambda=25)

t <- wfp[[1]]
R <- wfp[[2]]

par(mfrow=c(1,3))
stackpoly(R,stack=T,main='Community Dynamics',xlab='time',ylab='Abundance')

Pvalsf <- CVTest(100,R)
Pvalst <- CVTest(100,R,regress='time')

plot(ecdf(Pvalsf),xlab='P',ylab='#',main='P-values from regress="f"')
lines(c(0,1),c(0,1),lwd=4,col='blue')

plot(ecdf(Pvalst),xlab='P',ylab='#',main='P-values from regress="time"')
lines(c(0,1),c(0,1),lwd=4,col='blue')

#Uncorrected KS test - the P-value from the KS-test gives a comparable estimate of the incompatibility of the simulation with a WFP
ks <- ks.test(Pvalsf,runif(length(Pvalsf)))
ks$p.value

ks.test(Pvalst,runif(length(Pvalst)))$p.value

}
\references{
http://biorxiv.org/content/early/2016/03/18/044495
}

